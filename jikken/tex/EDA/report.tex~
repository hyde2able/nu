\documentclass[uplatex]{jsarticle}
\AtBeginDvi{\special{pdf:mapfile dlbase14.map}}
\usepackage[dvipdfmx]{graphicx}
\usepackage{ascmac}
\usepackage{url}
\usepackage{plext}
\usepackage{listings,jlisting}

\lstset{language=c,%
  basicstyle=\ttfamily\scriptsize,%
  commentstyle=\textit,%
  classoffset=1,%
  keywordstyle=\bfseries,%
  frame=tRBl,%
  framesep=5pt,%
  showstringspaces=false,%
  numbers=left,%
  stepnumber=1,%
  numberstyle=\tiny,%
  tabsize=2%
}
\begin{document}

\title{EDAツールを用いた論理回路設計}
\author{名古屋大学工学部電気電子・情報工学科情報コース\\酒井 英伸（学籍番号081330766）\\sakai.hidenobu@f.mbox.nagoya-u.ac.jp}
\date{2016/10/6, 13}
\maketitle

\tableofcontents


\clearpage
%===================================================================
\section{はじめに}
%===================================================================

今回の実験では、ハードウェア記述言語であるVerilog HDLを用いて、設計を行う。また、そのコードの機能レベルの
シミュレーションや論理合成をソフトウェア上で行い、回路の動作検証、評価は実験1に関しては、書き換え可能な論理素子
であるFPGA(Field Programmable Gate Array)を使用した。

%===================================================================
\section{2入力1出力セレクタ回路の設計と動作実験(実験1)}
%===================================================================

%---------------------------------------------------------------------
\subsection{目的・概要}
%---------------------------------------------------------------------

この実験では、2入力1出力セレクタ回路の回路の設計と動作実験を行う。また、その機能レベルシミュレーションや
論理合成を行うための環境設定や、ソフトウェアの使い方を理解するとともに、書き換え可能な論理素子であるFPGA
を搭載した実験基盤を用いて、FPGA上に設計した回路を実現することを目的とする。。

%---------------------------------------------------------------------
\subsection{実験手順}
%---------------------------------------------------------------------

はじめに、以下の手順で今回の実験を行うためのコンピュータの環境は以下のとおりである。

\begin{itemize}
  \item OS: Linux
  \item Kernel: 2.6.32-642.6.1.el6.x86\_64
\end{itemize}

%----------------------------------
\subsubsection{EDAツールの環境設定}
%----------------------------------

\begin{enumerate}
  \item
    端末上で「{\tt ln -s /pub1/jikken/eda3/cadsetup.csh.altera path/to/directory}」
    \fontnote{lnコマンドはファイルやディレクトリへのリンクを作成するコマンド.}
    と入力して、ファイルのシンボリックリンク
    \fontnote{lnコマンドに-sオプションを指定することで、作成される。特定のファイルやディレクトリを指し示す別のファイルを作成して、それを通じて本体を三章できるようにする仕組みのこと.}
    を自分の作業用のディレクトリに作成した。
  \item 
    作成した設定ファイルを読み込むために「\tt source /path/to/directory/cadsetup.csh.altera}」
    \footnote{指定したファイルを読み込む.}
    と入力した。(この操作は端末を起動する度に実行する。)
\end{enumerate}

%----------------------------------
\subsubsection{Verilog HDLによる回路記述}
%----------------------------------

今回の実験では図\ref{fig:1}のような2入力1出力セレクタ回路を設計した。
仕様は以下の通りであった。

\begin{itemize}
  \item 入力: データD0, D1(それぞれ1ビット), セレクト信号S1(1ビット)
  \item 出力: データY(1ビット)
  \item 機能: セレクト信号S1の値が0か1かにより、データD0, D1の値をYに出力
  \item 図\ref{fig:1}はこのセレクタ回路の回路図と真理値表である。
\end{itemize}

\begin{figure}[htb]
  \begin{center}
    \includegraphics[width=13cm]{images/fig01.eps}
    \caption{2入力1出力セレクタ回路の回路図と真理値表}
    \label{fig:01}
  \end{center}
\end{figure}

まずは、2入力1セレクタ回路の記述を行った。
ソースコードは以下のようになった。

\lstinputlisting[caption=セレクタ回路,label=mux21.v]{../../jikken1/mux21.v}

このコードの説明を以下に記述する。

\begin{itemize}
  \item 1~5行目はコメントである。
  \item VerilogHDLでは、モジュールで一つの回路を記述するため、{\tt module ... endmodule}という記述をした。
  \item 7行目でモジュール名{\tt mux21} を定義して、ポート(入出力インタフェース)を( ... )内に記述した。
  \item 8, 9行目で各ポートの型(入力、出力、ビット数)を宣言した。
  \item 11行目は12行目の式のコメントである。
  \item 
    12行目で{\tt assign}文で、出力Yに論理式$(\lnot S_1 \land D_0) \lor (S_1 \land D_1)$を対応させた。この論理式は、図\ref{fig:1}の真理値表に対応している。
    {\tt assign}文は、シミュレーションの最中に、右辺のオブジェクトの値に変化が生じる度に実行される。
\end{itemize}

回路の設計をするには回路そのもの記述の他に、その記述した回路が正しく動作するかのテストの記述が必要となる。
これをテストベンチといい、今回の{\tt mux21.v}も同様にセレクタ回路の動作を確認するためのテストベンチ、{\tt test\_mux21.v}を作成した。

\lstinputlisting[caption=セレクタ回路のテストベンチ,label=test_mux21.v]{../../jikken1/test_mux21.v}

このコードも同様に説明を以下に記述する。   

\begin{itemize}
  \item 1~4行目はコメントである。
  \item 6行目で、シミュレーションの単位時間と精度を宣言した。今回はどちらも1nsと宣言した。
  \item 7行目で、mux21.vを取り込む記述をした。
  \item 9行目の {\tt module}以降で、テストベンチモジュールの宣言を行っている。
  \item 12行目で信号を与える入力ポートを指定した。
        {\tt reg}は記憶素子を表すオブジェクトである。
  \item 15行目で信号値を観測する出力ポートを指定した。
        {\tt wire}は配線を表すオブジェクトで、下位階層の出力ポートに接続しているオブジェクトを{\tt wire}宣言する。
  \item 20行目 ~ 34行目でテストパタンを宣言した。
        このテストパタンでは送る信号を表\ref{tab:1}にまとめた。また、図\ref{fig:1}の真理値表に基づいて、予想される出力Yの値も記述した。
\end{itemize}

\begin{table}[htb]
  \begin{center}
    \caption{test\_mux21.vによるテストパタン}
    \begin{tabular}{c|ccc|c} \hline
       　　　  & S1 & D0 & D1 & 予想される出力Y \\ \hline \hline
      初期値   & 0 & 0 & 0 & 0 \\
      20ns後  & 0 & 1 & 0 & 1 \\
      40ns後  & 1 & 1 & 0 & 0 \\
      60ns後  & 0 & 0 & 0 & 0 \\
      160ns後 & \multicolumn{3}{c|}{終了} & 0 \\ \hline
    \end{tabular}
    \label{tab:1}
  \end{center}
\end{table}

%----------------------------------
\subsubsection{機能レベルシミュレーション}
%----------------------------------

Verilog HDLで記述した回路が，機能的に正しく動作するかどうかを調べるために，論理シミュレータを用いた。
論理シミュレータには，Altera社のModelSim version 10.1d を用いた。
以下の手順で機能レベルシミュレーションを行った。

\begin{enumerate}
  \item 「{\tt vsim test\_mux21.v &}」コマンドを端末上で実行して、ModelSimでtest\_mux21.vを開いた。
  \item ModelSimのコンソールで「{\tt vlib work}」を実行して、ライブラリを作成した。
  \item 
    次に、「{\tt vlog test\_mux21.v}」コマンドを実行して、VerilogHDLで記述されたファイルのコンパイルを行った。
    この時、コンソール上で正しくコンパイルできた場合に表示される「{\tt Top level modules: test}」というメッセージを確認した。
  \item 最上位モジュールを読み込むために「{\tt vsim test}」を十個浮いて、コンパイルしたVerilogHDL記述内の最上位モジュールを読み込む。
  \item 次に、波形ウィンドウを「{\tt view wave}」コマンドで表示して、全ての入出力ポートの波形を表示する設定を「{\tt add wave *}」コマンドで行った。
  \item 最後に「{\tt run 80ns}」とコンソールに入力して、シミュレーションを開始し、その結果の波形を得た。
\end{enumerate}

%----------------------------------
\subsubsection{論理合成}
%----------------------------------

論理合成で、ハードウェア記述言語によって記述された回路を最適化して、ゲートレベルの記述であるネットリストに変換する。
論理合成には、FPGA設計フローにおける論理合成からFPGAマッピングまでの機能をサポートしているFPGA用統合開発ソフトウェアの
Quartus II Web Edition version 13.0.1を用いた。以下の手順で論理合成を行った。

\begin{enumerate}
  \item あらかじめ情報工学部実験用のサイトに上がっていたmux21.qpfをダウンロードした。
  \item 端末から「{\tt quartus &}」を実行してQuartus IIを起動して、プロジェクトファイルmux21.qpfを開いた。
        この時、Project Navigator1ウィンドウのEntity部分にコンパイル対象のFPGAとモジュールの名称(mux21~が表示されていることを確認した。
  \item ProcessingタブのStart Compilationでコンパイルを実行した。コンパイルが完了されると、メッセージウィンドウが開いてエラーが表示されていないことを確認した。
  \item コンパイル結果の確認を行った。Technology Map Viewerを用いて、咲いて季語の回路構成の確認や、Flow Summaryのロジックエレメントの確認をした。
        また、TImeQuest Timing Analyzerを用いて回路の遅延時間を確認した。
\end{enumerate}

%----------------------------------
\subsubsection{FPGAボードでの動作実験}
%----------------------------------

機能レベルシミュレーション、論理合成を行ったので、FPGAマッピングをするために、端末上で論理合成、レイアウト、FPGAマッピングの各機能を実行する一連の処理をまとめて実行した。
こkでのコンパイルはCUIで行い、「{\tt Quartus II Full Compilation was successful.}」と表示され、コンパイルが成功していることを確認した。
また、ディレクトリにmux.sofが生成されていることを確認した。

次に、以下の手順でAltera DE2-115ボードにsofファイルをインストールした。

\begin{enumerate}
  \item DE2-115ボードのマシンをUSBケーブルで接続した。また、DE2-115ボードに電源を入れるために電源を供給する専用のACアダプタを接続して、電源を入れた。
  \item 端末で「{\tt dmesg}」と入力して、マシンがボードを認識していることを確認した。
  \item ダウンロード用の設定ファイルmux21.cdfを作業ディレクトリに置いて、端末で「{\tt quartus\_pgm mux21.cdf}」と実行した。
        「{\tt Quartus II 32 bit Programmer was successful.}」と表示されたのを確認した。
  \item ボード上で、論理回路が仕様どおりに動作するかを確認した。表\ref{tab:1}に示した順に、スイッチやボタンを切り替え流れLEDの点灯の様子を記録した。
\end{enumerate}

%---------------------------------------------------------------------
\subsection{実験結果}
%---------------------------------------------------------------------

%----------------------------------
\subsubsection{機能レベルシミュレーション}
%----------------------------------

図\ref{fig:02}に示す波形を得た．

\begin{figure}[htb]
  \begin{center}
    \includegraphics[width=13cm]{images/fig02.eps}
    \caption{機能レベルシミュレーションを行った結果の波形}
    \label{fig:02}
  \end{center}
\end{figure}

%----------------------------------
\subsubsection{論理合成}
%----------------------------------

最適化後の回路構成は，図\ref{fig:03}のようになった．

\begin{figure}[htb]
  \begin{center}
    \includegraphics[width=13cm]{images/fig03.eps}
    \caption{最適化後の回路構成}
    \label{fig:03}
  \end{center}
\end{figure}

コンパイル結果のロジックエレメント数は図\ref{fig:04}のようだった． 
ロジックエレメント数は図\ref{fig:04}のTotal Logic Elementの部分である。

\begin{figure}[htb]
  \begin{center}
    \includegraphics[width=10cm]{images/fig04.eps}
    \caption{ロジックエレメント数}
    \label{fig:04}
  \end{center}
\end{figure}

回路の遅延時間は図\ref{fig:05}の通りだった．
トータルの遅延時間はここでは、13.447nsとなる。

\begin{figure}[htb]
  \begin{center}
    \includegraphics[width=10cm]{images/fig05.eps}
    \caption{遅延時間}
    \label{fig:05}
  \end{center}
\end{figure}

%----------------------------------
\subsubsection{FPGAボードでの動作実験}
%----------------------------------

表\ref{tab:1}で示したものと同じ結果になった．


